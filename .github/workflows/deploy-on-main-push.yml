name: Java CI with Gradle and Deploy to EC2

on:
  push:
    branches:
      - feature.dbaccess-env-fix
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Generate application.yaml from secrets
        run: |
          mkdir -p src/main/resources
          cat <<EOF > src/main/resources/application.yaml
          spring:
            application:
              name: demo
          
            # Thymeleaf setting
            thymeleaf:
              enabled: true
              prefix: classpath:/templates/
              spring:
                thymeleaf:
                  suffix: .html
          
            # PostgreSQL setting
            datasource:
              url: ${{ secrets.DB_URL }}
              driver-class-name: org.postgresql.Driver
              username: ${{ secrets.DB_USER }}
              password: ${{ secrets.DB_PASSWORD }}
            h2:
              console:
                enabled: true
            jpa:
              database-platform: org.hibernate.dialect.PostgreSQLDialect
              # 起動時にEntityに対応するテーブルがなければ作成する
              hibernate:
                ddl-auto: none
              show-sql: true
          
          # GoogleMap API Key
          api:
            key: ${{ secrets.API_KEY }}
          
          default:
            tokyo-lat: 35.68168615415703F
            tokyo-long: 139.76705199614096F
          EOF

      - name: Build JAR
        run: ./gradlew build

      - name: Upload JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST_NAME }}
          username: ${{ secrets.EC2_USER_NAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          source: "build/libs/*.jar"
          target: "/home/${{ secrets.EC2_USER_NAME }}/app/"
